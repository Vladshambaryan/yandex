numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
for number_1 in numbers:
    for number_2 in numbers:
        print(number_1, '*', number_2, '=', number_1 * number_2)

=========================================================================


months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']

for month in reversed(months):
    print(month)

=========================================================================

print('Это первый этаж.')
# Первый этаж построен, начинайте строить со второго
for i in range(2, 11):
    print('А это', i, 'этаж, он на один выше, чем этаж', i-1)
=========================================================================

bunny_counter = ''
for i in range(1, 6):
    bunny_counter = bunny_counter + str(i) + ', '

print(bunny_counter + 'вышел зайчик погулять!')

========================================================================

countdown_str = ''

for i in reversed(range(0 , 11)):
    countdown_str = countdown_str + str(i) + ', '

countdown_str = countdown_str + 'поехали!'

print(countdown_str)

=========================================================================

beaufort = 8

if beaufort == 0:
    print('Штиль')
elif beaufort == 1:
    print('Тихий ветер')
elif beaufort == 2:
    print('Лёгкий ветер')
elif beaufort == 3:
    print('Слабый ветер')
elif beaufort == 4:
    print('Умеренный ветер')
elif beaufort == 5:
    print('Свежий ветер')
elif beaufort == 6:
    print('Сильный ветер')
else:
    print('Шторм')

===========================================================================

for messages_count in range(0, 21):
    if messages_count == 0:
        print('У вас нет новых сообщений')
    elif messages_count == 1:
        print('У вас 1 новое сообщение')
    elif messages_count <= 4:
        print('У вас', messages_count, 'новых сообщения')
    else:
        print('У вас', messages_count, 'новых сообщений')

==========================================================================

for current_hour in range(0, 24):
    print("На часах " + str(current_hour) + ":00.")
    # Вместо многоточий напишите код
    if current_hour < 6:
        print('Доброй ночи!')
    elif current_hour < 12:
        print('Доброе утро!')
    elif current_hour < 18:
        print('Добрый день!')
    elif current_hour < 23:
        print('Добрый вечер!')
    else:
        print('Доброй ночи!')

=============================================================================

for current_hour in range(0, 24):
    print("На часах " + str(current_hour) + ":00.")
    if current_hour >= 6 and current_hour <= 11:
        print('Доброе утро!')
    elif current_hour >= 12 and current_hour <= 17:
        print('Добрый день!')
    elif current_hour >= 18 and current_hour <= 22:
        print('Добрый вечер!')
    elif current_hour <= 5 or current_hour >= 23:
        print('Доброй ночи!')

==============================================================================

for messages_count in range(0, 21):
    if messages_count == 0:
        print('У вас нет новых сообщений')
    elif messages_count == 1:
        print('У вас 1 новое сообщение')
    elif messages_count >= 2 and messages_count <= 4:
        print('У вас', messages_count, 'новых сообщения')
    else:
        print('У вас', messages_count, 'новых сообщений')

===============================================================================
x = 44

if not x > 40 or x < 45 and x != 42:
    print("Выражение вернуло True!")
else:
    print("Выражение вернуло False!")


# передадим в программу данные
beaufort = 3  # сильный ветер
is_raining = False  # дождя нет
temperature = 22

if (not is_raining or beaufort <= 4) and temperature >= 22:
    print('Идём гулять, на улице хорошо')
else:
    print('Сидим дома, читаем Практикум')

===================================================================================

def hello(name, bonus):
    # Оба параметра применим в теле функции:
    print(name + ', приветствую тебя! Бери ' + bonus)


hello('Дарт Вейдер', 'печеньки')

# И ещё раз вызовем, с другими аргументами:
hello('Винни Пух', 'мёд')

# Раскомментируйте вызов функции, подставьте в него аргументы
# и вновь запустите код
hello('vlad', 'что-то вкусное')

====================================================================================

students = ['Ира', 'Маша', 'Ваня', 'Петя']

def hello():
    for student in students:
          print('Привет, ' + student)

hello()

======================================================================================

def say_hello(current_hour):
    if current_hour <= 5 or current_hour >= 23:
        print('Доброй ночи!')
    elif current_hour >= 6 and current_hour <= 11:
        print('Доброе утро!')
    elif current_hour >= 12 and current_hour <= 17:
        print('Добрый день!')
    elif current_hour >= 18 and current_hour <= 22:
        print('Добрый вечер!')

say_hello(4)  # Вызов функции say_hello() с аргументом 4
say_hello(10)  # Вызов функции с аргументом 10
say_hello(15)  # Ещё один вызов функции
say_hello(20)  # И ещё один вызов

=========================================================================================

def say_about():
    # Код, написанный ниже, переместите в тело объявленной функции
    print('Привет, я Анфиса!')
    print('Я персональный помощник.')
    print('Я ещё маленькая,')
    print('но постоянно расту и умнею:')
    print('ведь мой код каждый день дописывают!')

say_about()

================================================================================================

def print_friends_count(friends_count):

    # Код, написанный ниже, переместите внутрь объявленной вами функции
    if friends_count == 0:
        print('У тебя нет друзей')
    elif friends_count == 1:
        print('У тебя', friends_count, 'друг')
    elif friends_count >= 2 and friends_count <= 4:
        print('У тебя', friends_count, 'друга')
    elif friends_count >= 5 and friends_count < 20:
        print('У тебя', friends_count, 'друзей')
    else:
        print('Ого, сколько у тебя друзей! Целых', friends_count)
print_friends_count(1)
print_friends_count(2)
print_friends_count(6)
print_friends_count(20)

===============================================================================================

def print_friends_count(friends_count):
    if friends_count == 0:
        print('У тебя нет друзей')
    elif friends_count == 1:
        print('У тебя', friends_count, 'друг')
    elif friends_count >= 2 and friends_count <= 4:
        print('У тебя', friends_count, 'друга')
    elif friends_count >= 5 and friends_count < 20:
        print('У тебя', friends_count, 'друзей')
    else:
        print('Ого, сколько у тебя друзей! Целых', friends_count)

# Ниже напишите цикл, в котором будет вызываться функция print_friends_count
# с аргументом от 0 до 20 включительно
for friends_count in range(0, 21):
    print_friends_count(friends_count)

===================================================================================

users = ['Степан', 'Анатолий', 'Антон', 'Андрей']

def print_users(users):
    for user in users:
        print(user)
print_users(users)

==========================================================================================
# Добавим значение по умолчанию для аргумента name
def print_home(name='Инкогнито', planet='Икс'):
    print(name + ' живёт на планете ' + planet)

# Передаём именованный параметр:
# явно указываем, что значение 'Земля' предназначено для параметра planet
print_home(planet='Земля')

# Ещё раз вызовем функцию: передадим два именованных параметра,
# но не в том порядке, как они указаны в объявлении функции:
print_home(planet='Земля', name='Винни Пух')

================================================================================================

def lets_go(name='Друг', target='учить Python'):
    print(name + ', пойдём ' + target)

# Исправьте вызов так, чтобы аргумент был передан
# в параметр с именем target
lets_go(target='читать следующий урок!')


flat = [
    5.55, 22.19, 7.78, 26.86, 5.55,
    29.84, 22.19, 5.55, 16.85, 4.52
]
# len(flat) подсчитает количество элементов в списке flat
# Сохраним это значение в переменную rooms_num
rooms_num = len(flat)
# И напечатаем полученное значение
print(rooms_num)

===============================================================================================================

flat = [
    5.55, 22.19, 7.78, 26.86, 5.55, 22.19,
    29.84, 22.19, 5.55, 16.85, 4.52
]
# Сохраним искомое значение в переменной, так будет проще работать.
room_size = 22.19
# В переменной count будем подсчитывать
# количество обнаруженных помещений нужной площади.
# Пока что она равна нулю.
count = 0
# Объявляем цикл: из списка flat все значения по очереди будут передаваться
# в переменную room
for room in flat:
    # Проверяем, равно ли значение переменной room искомому значению
    if room == room_size:
        # Если значения room и room_size равны -
        # переменной count присваиваем её предыдущее значение,
        # увеличенное на единицу
        count = count + 1
# Этот код выполнится только после того,
# как цикл переберёт все элементы списка flat.
# В переменной count будет сохранено количество помещений с площадью 22.19
print('Комнат площадью', room_size, 'кв.м:', count)

=========================================================================================================

flat = [
    5.55, 22.19, 7.78, 26.86, 5.55,
    29.84, 22.19, 5.55, 16.85, 4.52
]
# В переменной sum_area будем суммировать площади комнат.
# Пока что она равна нулю.
sum_area = 0
for room in flat:
    # На каждой итерации цикла прибавляем к sum_area площадь ещё одной комнаты
    # Запишем эту операцию через сокращённый синтаксис +=
    sum_area += room
print('Общая площадь =', sum_area)

# Список годов, в которые Depeche Mode выпускала альбомы
years = [
    1981, 1982, 1983, 1984, 1986, 1987, 1990,
    1993, 1997, 2001, 2005, 2009, 2013, 2017
]

# В этой переменной будем подсчитывать количество альбомов.
# Пока что в ней ничего нет, она равна нулю.
count = 0

for year in years:
    if year > 2000:
        # Каждый раз загибаем по одному пальцу,
        # обнаружив альбом, выпущенный в 21 веке.
        count += 1   # Это то же самое, что count = count + 1

print('Выпущено альбомов в XXI веке:', count)

============================================================================================================

# Объявите функцию rooms_equal() с параметрами room_size и room_list
def rooms_equal(room_size, room_list):
# Перенесите следующий код в тело функции, которую вы объявили
    count = 0
    for room in room_list:
        if room == room_size:
            count = count + 1
    print('Комнат площадью', room_size, 'кв.м:', count)
# Следующий код не изменяйте и не переносите в тело функции
flat = [
    5.55, 22.19, 7.78, 26.86, 5.55,
    29.84, 22.19, 5.55, 16.85, 4.52
]
hut = [9.2, 3.5, 8.1, 2.3, 9.2, 4.2, 6.9]
rooms_equal(5.55, flat)
# Добавьте ещё один вызов функции rooms_equal()
# Передайте в функцию искомую площадь - 9.2 кв.м и список hut
rooms_equal(9.2, hut)

================================================================================================================================

def number_of_occurrences(char, string):
    # Здесь объявите переменную count, равную нулю.
    # Она будет хранить количество вхождений
    count = 0
    for letter in string:
        # Напишите условие: сравните переменные letter и char
        # И если letter равна char - увеличивайте счётчик count на 1
        if letter == char:
            count += 1
    # Печатаем исходную строку:
    print('Исходная строка:', string)
    # Печатаем результат подсчётов:
    print('Количество вхождений символа', char, 'составляет:', count)
# Код ниже не изменяйте
phrase = 'Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили.'
# Вызываем функцию number_of_occurrences(), чтобы она посчитала,
# сколько раз во фразе phrase встречается буква 'е'
number_of_occurrences('е', phrase)

=========================================================================================================================================
may_2017 = [24, 26, 15, 10, 15, 19, 10, 1, 4, 7, 7, 7, 12, 14, 17, 8, 9, 19, 21, 22, 11, 15, 19, 23, 15, 21, 16, 13, 25, 17, 19]
may_2018 = [20, 27, 23, 18, 24, 16, 20, 24, 18, 15, 19, 25, 24, 26, 19, 24, 25, 21, 17, 11, 20, 21, 22, 23, 18, 20, 23, 18, 22, 23, 11]
def comfort_count(temperatures):
    count = 0
    for temp in temperatures:
        if temp >= 22 and temp <= 26:
            count += 1
    print('Количество тёплых дней в этом месяце:', + count)
    # Вызовите функцию print()
# Дальше код не меняйте
comfort_count(may_2017)  # Узнаем, что было в мае 2017 г.
comfort_count(may_2018)  # Узнаем, что было в мае 2018 г.


